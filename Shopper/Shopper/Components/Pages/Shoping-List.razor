@page "/shopping-list"
@using Shopper.Components.Entity
@using Shopper.Components.Services
@inject IItemsService itemsService
<h1>@selectedList</h1>
<div>
    <h2>Choose a list:</h2>
    <div>
    <label><input type="radio" value="Aktualna lista" checked="@IsSelected("Actual_List")" @onchange="OnSelectionChanged" /> Aktualna lista</label>
    <label><input type="radio" value="Kuzyni" checked="@IsSelected("Kuzyni")" @onchange="OnSelectionChanged" /> Kuzyni</label>
    <label><input type="radio" value="Nabial" checked="@IsSelected("Nabial")" @onchange="OnSelectionChanged" /> Nabial</label>
    <label><input type="radio" value="Koszyk" checked="@IsSelected("Koszyk")" @onchange="OnSelectionChanged" /> Koszyk</label>
    </div>
</div>
@if (selectedList == "Actual_List")
{
    <ul>
        @foreach (var item in shoppingList)
        {

            <li>
                <span>Nazwa: @item.Key.Name</span><span>Genre: @item.Key.Genre</span><span>Amount: @item.Value</span>
                <button @onclick="() => SubmitItem(item.Key,item.Value)">remove item</button>
            </li>
        }

    </ul>
}
else if (selectedList == "Kuzyni")
{
    <ul>
        <li>Dog</li>
        <li>Cat</li>
        <li>Elephant</li>
    </ul>
}
else if (selectedList == "Nabial")
{
    <ul>
        <li>Red</li>
        <li>Blue</li>
        <li>Green</li>
    </ul>
}
else if (selectedList == "Koszyk")
{
    <ul>
        @foreach (var item in submitedList)
        {

            <li>
                <span>Nazwa: @item.Key.Name</span><span>Genre: @item.Key.Genre</span><span>Amount: @item.Value</span>
@*                 <button @onclick="() => SubmitItem(item.Key,item.Value)">remove item</button>
 *@            </li>
        }

    </ul>
}

@code {
    private string selectedList { get; set; } = "Actual_List";
    protected Dictionary<ItemDto, int> shoppingList = new();
    protected Dictionary<ItemDto, int> submitedList = new();


    protected override void OnInitialized()
    {
        RerenderList();
    }

    private void OnSelectionChanged(ChangeEventArgs e)
    {
        selectedList = e.Value?.ToString();
        RerenderList();
    }

    private bool IsSelected(string value)
    {
        return selectedList == value;
    }

    private void SubmitItem(ItemDto item, int itemCount)
    {
        itemsService.SubmitItem(item, itemCount);
        RerenderList();
    }

    private void RerenderList()
    {
        shoppingList = itemsService.GetShoppingList();
        submitedList = itemsService.GetSubmittedItems();
        StateHasChanged();
    }
}
